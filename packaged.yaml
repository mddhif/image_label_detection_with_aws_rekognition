AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Detect Labels using Rekognition
Parameters:
  ResultsTable:
    Type: String
    Description: Name of our existing dynamodb table
Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: ${AWS::StackName}-${AWS::Region}-${AWS::AccountId}
    Metadata:
      SamResourceId: Bucket
  Function:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.13
      Handler: app.lambda_handler
      CodeUri: s3://${AWS::StackName}-${AWS::Region}-${AWS::AccountId}/f9305db62154181d3e273ca04af4e2e8
      Environment:
        Variables:
          RESULTS_TABLE:
            Ref: ResultsTable
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action: s3:GetObject*
          Resource:
            Fn::Sub: arn:aws:s3:::${AWS::StackName}-${AWS::Region}-${AWS::AccountId}*
        - Effect: Allow
          Action: s3:PutObject*
          Resource: arn:aws:s3:::${AWS::StackName}-${AWS::Region}-${AWS::AccountId}/*
        - Effect: Allow
          Action:
          - rekognition:DetectText
          - rekognition:DetectLabels
          Resource: '*'
        - Effect: Allow
          Action:
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:Scan
          - dynamodb:UpdateItem
          Resource:
            Fn::Join:
            - ''
            - - 'arn:aws:dynamodb:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :table/
              - Ref: ResultsTable
      Events:
        Upload:
          Properties:
            Bucket:
              Ref: Bucket
            Events: s3:ObjectCreated:*
          Type: S3
    Metadata:
      SamResourceId: Function
